/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import com.itextpdf.io.image.ImageDataFactory;
import com.itextpdf.kernel.font.PdfFont;
import com.itextpdf.kernel.font.PdfFontFactory;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Image;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.properties.TextAlignment;
import controller.QuanLyThongKeController;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;



/**
 *
 * @author trinh thanh
 */
public class QuanLyThongKe extends javax.swing.JPanel {

    /**
     * Creates new form ThongKe
     */
    public QuanLyThongKe() {
        initComponents();
       
        QuanLyThongKeController controller = new QuanLyThongKeController();
        controller.bieudoDoanhthu(jpnview1);
        controller.bieudoTongHoaDon(jpnview2);
      controller.bieudoSanPham(jpnview3);
        jpnview1.setPreferredSize(new Dimension(1000,230));
        jpnview2.setPreferredSize(new Dimension(1000,230));
        jpnview3.setPreferredSize(new Dimension(1000,230));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnview1 = new javax.swing.JPanel();
        jpnview2 = new javax.swing.JPanel();
        jpnview3 = new javax.swing.JPanel();
        btntimkiem = new javax.swing.JButton();
        btn_pdf = new javax.swing.JButton();
        btn_email = new javax.swing.JButton();
        datengaybatdau = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        datengaybatdau2 = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        btntimkiem1 = new javax.swing.JButton();
        btn_pdf1 = new javax.swing.JButton();
        datengaybatdau1 = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        datengayketthuc2 = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        btn_pdf2 = new javax.swing.JButton();

        jpnview1.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jpnview1Layout = new javax.swing.GroupLayout(jpnview1);
        jpnview1.setLayout(jpnview1Layout);
        jpnview1Layout.setHorizontalGroup(
            jpnview1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jpnview1Layout.setVerticalGroup(
            jpnview1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 197, Short.MAX_VALUE)
        );

        jpnview2.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jpnview2Layout = new javax.swing.GroupLayout(jpnview2);
        jpnview2.setLayout(jpnview2Layout);
        jpnview2Layout.setHorizontalGroup(
            jpnview2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 564, Short.MAX_VALUE)
        );
        jpnview2Layout.setVerticalGroup(
            jpnview2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 207, Short.MAX_VALUE)
        );

        jpnview3.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jpnview3Layout = new javax.swing.GroupLayout(jpnview3);
        jpnview3.setLayout(jpnview3Layout);
        jpnview3Layout.setHorizontalGroup(
            jpnview3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jpnview3Layout.setVerticalGroup(
            jpnview3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 195, Short.MAX_VALUE)
        );

        btntimkiem.setText("Tìm Kiếm");
        btntimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemActionPerformed(evt);
            }
        });

        btn_pdf.setText("Xuất PDF");
        btn_pdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pdfActionPerformed(evt);
            }
        });

        btn_email.setText("Gửi Email");
        btn_email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_emailActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Ngày Bắt Đầu:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Ngày Kết Thúc:");

        btntimkiem1.setText("Tìm Kiếm");
        btntimkiem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiem1ActionPerformed(evt);
            }
        });

        btn_pdf1.setText("Xuất PDF");
        btn_pdf1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pdf1ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Ngày Kết Thúc:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Ngày Bắt Đầu:");

        btn_pdf2.setText("Xuất PDF");
        btn_pdf2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pdf2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jpnview2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpnview1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpnview3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btntimkiem)
                                .addGap(18, 18, 18)
                                .addComponent(btn_pdf)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_email))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel7))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(btntimkiem1)
                                                .addGap(27, 27, 27))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addGap(18, 18, 18)))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btn_pdf1)
                                    .addComponent(datengaybatdau2, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                                    .addComponent(datengaybatdau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(datengaybatdau1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_pdf2)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(datengayketthuc2, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)))
                .addGap(0, 24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpnview1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btntimkiem)
                            .addComponent(btn_pdf)
                            .addComponent(btn_email))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(datengaybatdau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(datengaybatdau2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jpnview2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btntimkiem1)
                            .addComponent(btn_pdf1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(datengaybatdau1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(datengayketthuc2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jpnview3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(btn_pdf2)))
                .addGap(0, 426, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btntimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemActionPerformed
        try {
            Date startDate = datengaybatdau.getDate();
            Date endDate = datengaybatdau2.getDate();

            if (startDate == null || endDate == null) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn cả ngày bắt đầu và ngày kết thúc!");
                return;
            }

            if (startDate.after(endDate)) {
                JOptionPane.showMessageDialog(this, "Ngày bắt đầu phải nhỏ hơn hoặc bằng ngày kết thúc!");
                return;
            }

            // Chuyển đổi đối tượng Date thành String theo định dạng yyyy-MM-dd
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String startDateStr = sdf.format(startDate);
            String endDateStr = sdf.format(endDate);

            // Tạo đối tượng controller và gọi phương thức vẽ biểu đồ
            QuanLyThongKeController controller = new QuanLyThongKeController();
            controller.bieudoDoanhThuTheoNgay(jpnview1, startDateStr, endDateStr);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi: " + ex.getMessage());
        }
    }//GEN-LAST:event_btntimkiemActionPerformed

    private void btn_pdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pdfActionPerformed
        try {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("D:\\dự án 1 database\\Các File Lưu");
            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            fileChooser.setSelectedFile(new File("ThongKe_DoanhThu.pdf"));
            int userSelection = fileChooser.showSaveDialog(this);

            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File fileToSave = fileChooser.getSelectedFile();

                exportChartToPDF(jpnview1, fileToSave.getAbsolutePath());
                JOptionPane.showMessageDialog(this, "Xuất file PDF thành công!");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi xuất file PDF: " + ex.getMessage());
        }
    }//GEN-LAST:event_btn_pdfActionPerformed

    private void btn_emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_emailActionPerformed
        EmailView emailView = new EmailView();
        emailView.setVisible(true);
    }//GEN-LAST:event_btn_emailActionPerformed

    private void btntimkiem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiem1ActionPerformed
        try {

            Date startDate = datengaybatdau1.getDate();
            Date endDate = datengayketthuc2.getDate();

            if (startDate == null || endDate == null) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn cả ngày bắt đầu và ngày kết thúc!");
                return;
            }

            if (startDate.after(endDate)) {
                JOptionPane.showMessageDialog(this, "Ngày bắt đầu phải nhỏ hơn hoặc bằng ngày kết thúc!");
                return;
            }

            // Chuyển đổi đối tượng Date thành String theo định dạng yyyy-MM-dd
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String startDateStr = sdf.format(startDate);
            String endDateStr = sdf.format(endDate);

            QuanLyThongKeController controller = new QuanLyThongKeController();
            controller.bieudoTongHoaDonTheoNgay(jpnview2, startDateStr, endDateStr);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi: " + ex.getMessage());
        }
    }//GEN-LAST:event_btntimkiem1ActionPerformed

    private void btn_pdf1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pdf1ActionPerformed
        try {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("D:\\dự án 1 database\\Các File Lưu");
            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            fileChooser.setSelectedFile(new File("ThongKe_HoaDon.pdf"));
            int userSelection = fileChooser.showSaveDialog(this);

            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File fileToSave = fileChooser.getSelectedFile();

                exportChartToPDF2(jpnview2, fileToSave.getAbsolutePath());
                JOptionPane.showMessageDialog(this, "Xuất file PDF thành công!");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi xuất file PDF: " + ex.getMessage());
        }
    }//GEN-LAST:event_btn_pdf1ActionPerformed

    private void btn_pdf2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pdf2ActionPerformed
        try {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("D:\\dự án 1 database\\Các File Lưu");
            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            fileChooser.setSelectedFile(new File("ThongKe_SanPham.pdf"));
            int userSelection = fileChooser.showSaveDialog(this);

            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File fileToSave = fileChooser.getSelectedFile();

                exportChartToPDF3(jpnview3, fileToSave.getAbsolutePath());
                JOptionPane.showMessageDialog(this, "Xuất file PDF thành công!");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi xuất file PDF: " + ex.getMessage());
        }
    }//GEN-LAST:event_btn_pdf2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_email;
    private javax.swing.JButton btn_pdf;
    private javax.swing.JButton btn_pdf1;
    private javax.swing.JButton btn_pdf2;
    private javax.swing.JButton btntimkiem;
    private javax.swing.JButton btntimkiem1;
    private com.toedter.calendar.JDateChooser datengaybatdau;
    private com.toedter.calendar.JDateChooser datengaybatdau1;
    private com.toedter.calendar.JDateChooser datengaybatdau2;
    private com.toedter.calendar.JDateChooser datengayketthuc2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jpnview1;
    private javax.swing.JPanel jpnview2;
    private javax.swing.JPanel jpnview3;
    // End of variables declaration//GEN-END:variables

    private void exportChartToPDF(JPanel jpnview1, String absolutePath) {
       try {
            PdfWriter writer = new PdfWriter(new FileOutputStream(absolutePath));
            PdfDocument pdfDoc = new PdfDocument(writer);
            Document document = new Document(pdfDoc);
            PdfFont titleFont = PdfFontFactory.createFont("Helvetica-Bold");
            Paragraph title = new Paragraph("Báo Cáo Thống Kê")
                    .setFont(titleFont)
                    .setFontSize(16)
                    .setTextAlignment(TextAlignment.CENTER);
            document.add(title);
            document.add(new Paragraph(" "));
            
            BufferedImage chartImage1 = getChartImage(this.jpnview1);
            
            Image chart1 = new Image(ImageDataFactory.create(bufferedImageToByteArray(chartImage1)));
            chart1.setWidth(500);
            chart1.setHeight(300);
            document.add(chart1);
             document.add(new Paragraph(" "));
             
            Paragraph footer = new Paragraph("Báo cáo được tạo tự động vào " + new Date())
                    .setFont(PdfFontFactory.createFont("Helvetica-Oblique"))
                    .setFontSize(10)
                    .setTextAlignment(TextAlignment.RIGHT);
            document.add(footer);
            document.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private BufferedImage getChartImage(JPanel panel) {
        BufferedImage image = new BufferedImage(panel.getWidth(), panel.getHeight(), BufferedImage.TYPE_INT_ARGB);
        Graphics2D g2 = image.createGraphics();
        panel.paint(g2);
        g2.dispose();
        return image;
    }
    
    private byte[] bufferedImageToByteArray(BufferedImage bufferedImage) throws Exception {
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        javax.imageio.ImageIO.write(bufferedImage, "png", baos);
        return baos.toByteArray();
    }

    
    
    
     private void exportChartToPDF2(JPanel jpnview2, String absolutePath) {
       try {
            PdfWriter writer = new PdfWriter(new FileOutputStream(absolutePath));
            PdfDocument pdfDoc = new PdfDocument(writer);
            Document document = new Document(pdfDoc);
            PdfFont titleFont = PdfFontFactory.createFont("Helvetica-Bold");
            Paragraph title = new Paragraph("Báo Cáo Thống Kê")
                    .setFont(titleFont)
                    .setFontSize(16)
                    .setTextAlignment(TextAlignment.CENTER);
            document.add(title);
            document.add(new Paragraph(" "));
            
            BufferedImage chartImage2 = getChartImage2(this.jpnview2);
            
            Image chart2 = new Image(ImageDataFactory.create(bufferedImageToByteArray2(chartImage2)));
            chart2.setWidth(500);
            chart2.setHeight(300);
            document.add(chart2);
             document.add(new Paragraph(" "));
             
            Paragraph footer = new Paragraph("Báo cáo được tạo tự động vào " + new Date())
                    .setFont(PdfFontFactory.createFont("Helvetica-Oblique"))
                    .setFontSize(10)
                    .setTextAlignment(TextAlignment.RIGHT);
            document.add(footer);
            document.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private BufferedImage getChartImage2(JPanel panel) {
        BufferedImage image = new BufferedImage(panel.getWidth(), panel.getHeight(), BufferedImage.TYPE_INT_ARGB);
        Graphics2D g2 = image.createGraphics();
        panel.paint(g2);
        g2.dispose();
        return image;
    }
    
    private byte[] bufferedImageToByteArray2(BufferedImage bufferedImage) throws Exception {
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        javax.imageio.ImageIO.write(bufferedImage, "png", baos);
        return baos.toByteArray();
    }

     private void exportChartToPDF3(JPanel jpnview3, String absolutePath) {
       try {
            PdfWriter writer = new PdfWriter(new FileOutputStream(absolutePath));
            PdfDocument pdfDoc = new PdfDocument(writer);
            Document document = new Document(pdfDoc);
            PdfFont titleFont = PdfFontFactory.createFont("Helvetica-Bold");
            Paragraph title = new Paragraph("Báo Cáo Thống Kê")
                    .setFont(titleFont)
                    .setFontSize(16)
                    .setTextAlignment(TextAlignment.CENTER);
            document.add(title);
            document.add(new Paragraph(" "));
            
            BufferedImage chartImage3 = getChartImage3(this.jpnview3);
            
            Image chart3 = new Image(ImageDataFactory.create(bufferedImageToByteArray3(chartImage3)));
            chart3.setWidth(500);
            chart3.setHeight(300);
            document.add(chart3);
             document.add(new Paragraph(" "));
             
            Paragraph footer = new Paragraph("Báo cáo được tạo tự động vào " + new Date())
                    .setFont(PdfFontFactory.createFont("Helvetica-Oblique"))
                    .setFontSize(10)
                    .setTextAlignment(TextAlignment.RIGHT);
            document.add(footer);
            document.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private BufferedImage getChartImage3(JPanel panel) {
        BufferedImage image = new BufferedImage(panel.getWidth(), panel.getHeight(), BufferedImage.TYPE_INT_ARGB);
        Graphics2D g2 = image.createGraphics();
        panel.paint(g2);
        g2.dispose();
        return image;
    }
    
    private byte[] bufferedImageToByteArray3(BufferedImage bufferedImage) throws Exception {
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        javax.imageio.ImageIO.write(bufferedImage, "png", baos);
        return baos.toByteArray();
    }
          
    
}
